/*
Given two sequences, find the length of longest subsequence present in both of them. Both the strings are of uppercase.

Input:
First line of the input contains no of test cases  T,the T test cases follow.
Each test case consist of 2 space separated integers A and B denoting the size of string str1 and str2 respectively
The next two lines contains the 2 string str1 and str2 .

Output:
For each test case print the length of longest  common subsequence of the two strings .

Constraints:
1<=T<=200
1<=size(str1),size(str2)<=100

Example:
Input:
2
6 6
ABCDGH
AEDFHR
3 2
ABC
AC

Output:
3
2
*/
#include <stdio.h>
#include <stdlib.h>

int LCS(char* str1,int n,char* str2,int m)
{
    int dp[n+1][m+1];//NULL-NULL +1
    
    for(int i=0;i<=n;i++)
    {
        dp[i][0]=0;
    }
    
    for(int i=0;i<=m;i++)
    {
        dp[0][i]=0;
    }
    
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=m;j++)
        {
            if(str1[i-1]==str2[j-1])
            {
                dp[i][j]=dp[i-1][j-1]+1;
            }
            else
            {
                dp[i][j]=(dp[i-1][j]>dp[i][j-1])?dp[i-1][j]:dp[i][j-1];
            }
        }
    }
    
    return dp[n][m];
}

int main() {
	
	int t;
	scanf("%d",&t);
	
	while(t--)
	{
	    int n;
	    int m;
	    
	    scanf("%d",&n);
	    scanf("%d",&m);
	    
	    char* str1;
	    char* str2;
	    
	    str1=(char*)malloc(sizeof(char)*n);
	    str2=(char*)malloc(sizeof(char)*m);
	    
	    scanf("%s",str1);
	    scanf("%s",str2);
	    
	    printf("%d\n",LCS(str1,n,str2,m));
	}
	return 0;
}