/*Given an array, the task is to divide it into two sets S1 and S2 such that the absolute difference between their sums is minimum.

Input:
The first line contains an integer 'T' denoting the total number of test cases. In each test cases, the first line contains an integer 'N' denoting 
the size of array. The second line contains N space-separated integers A1, A2, ..., AN denoting the elements of the array.


Output:
In each seperate line print minimum absolute difference.


Constraints:
1<=T<=200
1<=N<=50
1<=A[i]<=200


Example:
Input:
2
4
1 6 5 11
4
36 7 46 40

Output : 
1
23

Explaination :
Testcase 1:
Subset1 = {1, 5, 6} ; sum of Subset1 = 12
Subset2 = {11} ;       sum of Subset2 = 11

Testcase 2:
Subset1 = {7, 46} ;   sum = 53
Subset2 = {36, 40} ; sum = 76*/


#include <stdio.h>
#include <stdlib.h>

int subset_sum_variant(int* arr,int n)
{
    int sum=0;
    
    for(int i=0;i<n;i++)
    {
        sum+=arr[i];
    }
    
    char dp[n+1][sum+1];
    
    for(int i=0;i<=sum;i++)
    {
        dp[0][i]='0';
    }
    
    for(int i=0;i<=n;i++)
    {
        dp[i][0]='1';
    }
    
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=sum;j++)
        {
            if(arr[i-1]<=j)
            {
                dp[i][j]=((dp[i-1][j]-'0')||(dp[i-1][j-arr[i-1]]-'0'))+'0';
            }
            else//arr[i-1]>j
            {
                dp[i][j]=dp[i-1][j];
            }
        }
    }
    
    //dp matrix is done
    
    int x;
    
    for(int i=sum/2;i>=0;i--)
    {
        if(dp[n][i]-'0')
        {
            x=i;
            break;
        }
    }
    
    int s1=x;//sum of subset1
    int s2=sum-x;//sum of subset 2
    
    return abs(s1-s2);
}

int min_subset_diff(int* arr,int n)
{
    return subset_sum_variant(arr,n);
}

int main() {
	
	int t;
	scanf("%d",&t);
	
	while(t--)
	{
	    int n;
	    scanf("%d",&n);
	    
	    int* arr;
	    arr=(int*)malloc(sizeof(int)*n);
	    
	    for(int i=0;i<n;i++)
	    {
	        scanf("%d",&arr[i]);
	    }
	    
	    printf("%d\n",min_subset_diff(arr,n));
	}
	return 0;
}